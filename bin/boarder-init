#!/usr/bin/env node

var program = require('commander');
var exists = require('fs').existsSync;
var path = require('path');
var inquirer = require('inquirer');
var chalk = require('chalk');
var download = require('download-git-repo');
var home = require('user-home');
var ora = require('ora');
var rm = require('rimraf').sync;

program
  .usage('[project-name]')


/*
  help
*/
program.on('--help', function () {
  console.log('  Examples:')
  console.log()
  console.log(chalk.cyan('    # create a new project with a default template'))
  console.log('    $ boarder init my-project')
  console.log()
})


function help() {
  program.parse(process.argv)
  if (program.args.length < 1) return program.help()
}
help()

var template = 'wdemo';
var rawName = program.args[0];
var inPlace = !rawName || rawName === '.';
var to = path.resolve(rawName || '.');
var name = inPlace ? path.relative('../', process.cwd()) : rawName;
var tmp = path.join(home, '.boarder-templates', rawName.replace(/\//g, '-'));
var clone = program.clone || false;

if (exists(to)) {
  inquirer.prompt([{
    type: 'confirm',
    message: inPlace ?
      'Generate project in current directory?' :
      'Target directory exists. Continue?',
    name: 'ok'
  }]).then(function (answers) {
    console.log('answers', answers)
    if (answers.ok) {
      run()
    }
  })
} else {
  run()
}


function run() {
  console.log('run', tmp, template, to)
  var spinner = ora('downloading template')
  spinner.start()
  // Remove if local template exists
  if (exists(tmp)) rm(tmp)
  download('shaodahong/wdemo', to, { clone: clone }, function (err) {
    spinner.stop()
    if (err) {
      console.log('err', err)
    }

  })
}